[project]
name = "japanese-learning-portal"
version = "0.1.0"
description = "Backend API for Japanese Learning Portal"
requires-python = ">=3.12"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    # Testing
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.1",           # For async HTTP testing
    
    # Code Quality
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "ruff>=0.1.5",            # Fast Python linter
    
    # Type Checking
    "types-python-dateutil>=2.8.19.14",
]

[project.dependencies]
# FastAPI and Server
fastapi = {version = ">=0.104.1", extras = ["all"]}
uvicorn = {version = ">=0.24.0", extras = ["standard"]}

# Database and ORM
sqlalchemy = {version = ">=2.0.23", extras = ["asyncio"]}
aiosqlite = ">=0.19.0"
alembic = ">=1.12.1"

# Environment and Configuration
python-dotenv = ">=1.0.0"
pydantic = {version = ">=2.5.1", extras = ["email"]}
pydantic-settings = ">=2.1.0"

# Date/Time Handling
python-dateutil = ">=2.8.2"
pytz = ">=2023.3"

# Utilities
email-validator = ">=2.1.0.post1"  # For email validation in Pydantic
ujson = ">=5.8.0"                  # Fast JSON parsing
python-multipart = ">=0.0.6"       # For form data parsing
asyncer = ">=0.0.2"                # Async utility functions

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--verbose",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
plugins = [
    "pydantic.mypy"
]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
]
ignore = []

[tool.coverage.run]
source = ["app"]
omit = [
    "tests/*",
    "alembic/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
] 