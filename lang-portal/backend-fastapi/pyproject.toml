# uv pip install -e ".[dev]"

[project]
name = "japanese-learning-portal"
version = "0.1.0"
description = "Backend API for Japanese Learning Portal"
requires-python = ">=3.12"
dependencies = [
    # FastAPI and Server
    "fastapi[all]>=0.104.1",
    "uvicorn[standard]>=0.24.0",

    # Database and ORM
    "sqlalchemy[asyncio]>=2.0.23",
    "aiosqlite>=0.19.0",
    "alembic>=1.12.1",

    # Environment and Configuration
    "python-dotenv>=1.0.0",
    "pydantic[email]>=2.5.1",
    "pydantic-settings>=2.1.0",

    # Date/Time Handling
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",

    # Utilities
    "email-validator>=2.1.0.post1",
    "ujson>=5.8.0",
    "python-multipart>=0.0.6",
    "asyncer>=0.0.2"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.1",
    
    # Code Quality
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "ruff>=0.1.5",
    
    # Type Checking
    "types-python-dateutil>=2.8.19.14",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
asyncio_default_fixture_loop_scope = "function"
python_files = ["test_*.py"]
addopts = [
    "--verbose",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
plugins = [
    "pydantic.mypy"
]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
]
ignore = []

[tool.coverage.run]
source = ["app"]
omit = [
    "tests/*",
    "alembic/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

# Add the correct package configuration
[tool.hatch.build.targets.wheel]
packages = ["app"] 