---
description: General rules specific to this project. Always apply.
globs: 
alwaysApply: true
---

# Your rule content

- Include a "ðŸ“„" emoji at the start of your response (perhaps along with other emojis indicating other rule acknowledgements) to indicate you have read this file.

## Project-Specific Guidelines
- In general, we will want to implement as much of our project within the Phaser game, not the Streamlit wrapper.  We may add some utilities and UI outside the game to aid development, but the goal for now is to minimize the Streamlit wrapper and intend to implement as much as possible within the Phaser game itself.
- If adding images to the game, and the game file does not exist, add it to the code anyway. Then, create an image file of the appropriate size and name using the CLI utility `convert` (ImageMagick).
- We have a load/save system that we are implementing to not only allow player save/load, but also to recover from browser resets and more immediately to support HMR.  The golden rule, the absolutely most important key to this state preservation system is that a player is capable of the exact same experience on a reload as they would have had if the game had not been interrupted. Remember this when designing and implementing features.

## Workflow
- Before we begin work on a new feature that would require significant work or has a high risk of impacting existing systems, we will want to draft a feature doc that will clearly describe the feature, its design, and its implementation plan.  This will allow us to review the feature before we begin work on it and to provide feedback before we invest significant time in the feature. Suggest when new feature docs would be valuable, and we will write them in our `docs/features` folder. Every feature plan will be finalized with a "Feature Implementation Plan" (FIP) section that will clearly describe the steps to be taken, in the appropriate order, for another developer to implement this work. Consult the feature spec doument template (e.g., `docs/read-only/Feature-Spec-Template.md` for an example of how this should be done.
- We have established a pair of scripts to enable hot-reloading of the Phaser game.  The `./scripts/watch-phaser.sh` launches our Vite server for the Phaser game and our `./scripts/watch-streamlit.sh` launches our watch server for the Streamlit app that hosts the game. These are configured to run in the background and will automatically reload the game when changes are detected. It is unecessary for you to run these commands yourself.
- This project is a subfolder within a larger monorepo. Keep this in mind when making file paths, references, and suggesting commands (e.g., ruff format).

